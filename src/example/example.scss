$grids: ( 
    // suffix, media, container width, media for classes: visible, hidden
    ('', all ),
    ('-sm', (max-width: 992px), 750px, '(min-width: 768px)and(max-width: 992px)' ),
    ('-xs', (max-width: 768px), 480px, (max-width: 768px)  ),
    ('-xm', (max-width: 480px) ),
    ('-xn', (max-width: 360px) ),
    ('-mm', (max-width: 320px) ),
    ('-md', (min-width: 992px), 970px, '(min-width: 992px)and(max-width: 1200px)'  ),
    ('-lg', (min-width: 1200px), 1170px ),
    ('-ll', (min-width: 1600px), 1570px )
    
    //,('-print', print )
);


$prefixes: ( '-o-', '-ms-', '-moz-', '-webkit-' );


@mixin echo($values,$prefix: false){ 
    @each $k, $v in $values { 
        @if $prefix {  #{$prefix + $k}: $v; }
        #{$k}: $v;
    } 
}

@function cross($name,$value:''){
    $result: ();
    @each $prefix in $prefixes { $result: map-merge($result, ($prefix + $name : $value)); }
    @return map-merge($result, ($name : $value));
}


@mixin duration($sec: 0.25s){
    @include echo(cross(transition-duration,$sec)); 
}
@mixin property($value){
    @include echo(cross(transition-property,$value)); 
}
@mixin delay($value){
    @include echo(cross(transition-delay,$value)); 
}
@mixin filter($value){
    @include echo(cross(filter,$value)); 
}
@mixin opacity($value){
    filter:Alpha(Opacity=($value * 100));
    @include echo(cross(opacity,$value)); 
}
@mixin trans($x:0%,$y:0%){
    @include echo(cross(transform,translate($x,$y))); 
}
@mixin mixf($name, $func, $value){
    @each $prefix in $prefixes { #{$name}: #{$prefix + $func + '(' + $value + ')' }; }
    #{$name}: #{$func + '(' + $value + ')'};
}
@mixin side($name,$suffix,$prop,$value){
    #{$name}x#{$suffix} {
        #{$prop} : $value;
    }
    #{$name}#{$suffix} {
        #{$prop}-top : $value; 
        #{$prop}-bottom : $value;
    }
    #{$name}h#{$suffix} {
        #{$prop}-left : $value; 
        #{$prop}-right : $value;
    }
    
    #{$name}t#{$suffix} {
        #{$prop}-top : $value;
    }
    #{$name}b#{$suffix} {
        #{$prop}-bottom : $value;
    }
    #{$name}l#{$suffix} {
        #{$prop}-left : $value;
    }
    #{$name}r#{$suffix} {
        #{$prop}-right : $value;
    }
}
@mixin side-focus($name,$prop,$value,$sub:''){
    #{$name}x, #{$name + 'x-h:hover'}, #{$name + '-h:focus'} {
        #{$prop}#{$sub} : $value;
    }
    #{$name}, #{$name + '-h:hover'}, #{$name + 'v-h:focus'} {
        #{$prop}-top#{$sub} : $value;
        #{$prop}-bottom#{$sub} : $value;
    }
    #{$name}h, #{$name + 'h-h:hover'}, #{$name + 'h-h:focus'} {
        #{$prop}-left#{$sub} : $value;
        #{$prop}-right#{$sub} : $value;
    }
    #{$name}t, #{$name + 't-h:hover'}, #{$name + 't-h:focus'} {
        #{$prop}-top#{$sub} : $value;
    }
    #{$name}b, #{$name + 'b-h:hover'}, #{$name + 'b-h:focus'} {
        #{$prop}-bottom#{$sub} : $value;
    }
    #{$name}l, #{$name + 'l-h:hover'}, #{$name + 'l-h:focus'} {
        #{$prop}-left#{$sub} : $value;
    }
    #{$name}r, #{$name + 'r-h:hover'}, #{$name + 'r-h:focus'} {
        #{$prop}-right#{$sub} : $value;
    }
}

@mixin distance($name,$suffix,$value){
    #{$name}t#{$suffix} {
        top : $value;
    }
    #{$name}b#{$suffix} {
        bottom : $value;
    }
    #{$name}l#{$suffix} {
        left : $value;
    }
    #{$name}r#{$suffix} {
        right : $value;
    }
}

@mixin row($size){
    margin-left:-$size + px;
    margin-right:-$size + px;
	&,&>*{
    	&>[class*='col-']{
    		padding-left: $size + px;
    		padding-right: $size + px;
    	}
	}
}
@mixin padding-h($size){
    padding-left: $size + px;
    padding-right: $size + px;
    @content
}
@mixin clearfix(){
    &:before,&:after{ 
        content: " ";
        clear: both;
        display: table; 
    }
    @content
}


@mixin bg($index){ .bg#{$index}, .bg#{$index}-h:hover{ @content } }


@mixin radial($value){ @include mixf(background, radial-gradient, $value); }
@mixin linear($value){ @include mixf(background, linear-gradient, $value); }
@mixin as($value){ @include echo( cross(appearance,$value) ); }
@mixin placeholder(){ &::-webkit-input-placeholder, &:-moz-placeholder{ @content } }
@mixin all(){ &,&:active,&:hover,&:visited,&:focus{ @content } }
@mixin scale($value: 1.2){ @include echo( cross(transform, scale($value)) ); }

@mixin keyframes($name) {
    @-o-keyframes #{$name} { @content; }
    @-moz-keyframes #{$name} { @content; }
    @-webkit-keyframes #{$name} { @content; }
    @keyframes #{$name} { @content; } 
}

@include keyframes(spinner-animate){
    from { @include echo( cross(transform, rotateZ(0deg)) ); }
    to { @include echo( cross(transform, rotateZ(360deg)) ); }
}

.rotation{
    @include echo( cross(animation, spinner-animate 3s infinite linear) );
    position:relative;
}
.fa-spinner{
    @extend .rotation;
    top:1px;
}
.glyphicon-refresh.active{
    @extend .rotation;
}
@include keyframes(ball-animate){
    0% { @include scale(.7); @include opacity(.8); }
    25% { @include scale(1.2); @include opacity(1); }
    50% { @include scale(.7); @include opacity(.8); }
    75% { @include scale(.7); @include opacity(.6); }
    100% { @include scale(.7); @include opacity(.4); }
}

.loading-icons{
    &>*{
        @include echo( cross(animation, ball-animate 1s infinite linear) );
        border-radius: 100%;
        position: relative;
        display: block;
        width: 15px;
        height: 15px;
        background-color: #877683;
        float: left;
        width: 13px;
        height: 13px;
        top: 1px;
        margin-right: 4px;
        &:last-child{ margin-right: 0px; }
        &:nth-child(2){ @include echo( cross(animation-delay, .25s) ); }
        &:nth-child(3){ @include echo( cross(animation-delay, .5s) ); }
    }
}


.no-wrap{white-space: nowrap;}
.break{ @include echo(cross(word-break,break-word)); }
.no-break{ @include echo(cross(word-break,normal)); }
.justify{text-align: justify;}


//.shadow1{ @include echo( cross(box-shadow,inset 0px 0px 10px 5px rgba(0, 0, 0, .15)) ); }
    

//rotate x
@each $v in 180 
{ .rot#{$v}x, .rot#{$v}x-h:hover{ @include echo( cross(transform, rotateX( $v + deg )) ); } }
//rotate y
@each $v in 90 
{ .rot#{$v}y, .rot#{$v}y-h:hover{ @include echo( cross(transform, rotateY( $v + deg )) ); } }
//rotate z
@each $v in -90, -45, -270, 0, 45, 90 
{ .rot#{$v}z, .rot#{$v}z-h:hover{ @include echo( cross(transform, rotateZ( $v + deg )) ); } }


%none{ display: none !important; }
%block{ display: block;}
%cell{
    float: none;
    display: table-cell;
    vertical-align: middle;
}
%tbl{ display: table; &>*{ @extend %cell; }}

*, *:before, *:after{ @include echo( cross(box-sizing, border-box) ); }

x{ @extend %block;}


xs{color: #F00;}

img{
    border: 0;
    vertical-align: middle;
    max-width: 100%;
}
textarea{ 
    @include echo( cross(resize,vertical) ); 
    max-width: 100%;
    resize: vertical;
}
label{
    @extend %block;
    font-weight: inherit;
    margin: 0px;
    padding: 0px;
}
iframe,video{ @extend %block; }


.mix-input:not(input),.mix-btn:not(button){ @extend %tbl; }

.no-outline{outline:none;}

.no-select{ @include echo( cross(user-select, none) ); }
.select{ @include echo( cross(user-select, initial) ); }
.no-event{ @include echo( cross(pointer-events, none) ); }
.event{ @include echo( cross(pointer-events, auto) ); }

.overline{text-decoration: overline;}
.middline{text-decoration: line-through;}
.underline{text-decoration: underline;}
.noneline{text-decoration: none;}

.pointer{cursor: pointer;}
.move{cursor: move;}
.not-allowed{cursor: not-allowed;}

.overlay{
    position: absolute;
    display: block;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
}

 
.duration150{ @include duration(.15s); }
.duration, .duration250{ @include duration(.25s); }
.duration400{ @include duration(.4s); }
.duration500{ @include duration(.5s); }
.duration1000{ @include duration(1s); }
.no-duration{ @include duration(.0s !important); }


.overflow{overflow: hidden;}
.overflow-x{overflow-x: hidden;}
.overflow-y{overflow-y: hidden;}
.scroll-x{overflow-x: scroll;}
.scroll-y{overflow-y: scroll;}
.auto-x{overflow-x: auto;}
.auto-y{overflow-y: auto;}

.dotted,.dashed,.solid{border-width: 0px;}
.dotted{border-style: dotted;}
.dashed{border-style: dashed;}
.solid{border-style: solid;}


//opacity
@each $size in 50, 70, 80, 90 {
    #{'.o' + $size}, #{'.o' + $size + '-h:hover'} { @include opacity( 0.01 * $size ); }
}
.o,.o-h:hover{ @include opacity(0); }
.no-o,.no-o-h:hover{ @include opacity(1); }

%hide{
    @include duration(.25s);
    @include echo( cross(pointer-events, none) );
    @include opacity(0);
    z-index: -1;
}
%show{
    @include duration(.25s);
    @include echo( cross(pointer-events, auto) );
    @include opacity(1);
    z-index: 1;
}

.no-scale{
    @include scale(1);
}


.view-fake, .fakeView{
    display: none;
    &.none-fake,&.fakeNone{display: block;}
}



//background color
@include bg(1){background-color: #57b230;}
@include bg(2){background-color: #ffffff;}
@include bg(3){background-color: #f3f3f3;}

@include bg(5){background-color: #f7f6f3;}
@include bg(6){background-color: #eff0ea;}


.no-bg{background-color: transparent;}
 
 
//color 
@each $key, $value in 
(1, #000), 
(2, #FFF),
(3, #57b230),
(4, #4270af)
{ #{'.c' + $key}{ color: $value; } }

 
 

.lv{ @include linear( (to bottom, rgba(255,255,255,0.3) 0%, rgba(0,0,0,0.0) 100%) ); }
.blur{ @include echo( cross( filter, blur(4px) ) ); }


//z-index
.back{z-index:-1;}
.front{z-index:1;}
@each $size in 1, 2 { #{'.z' + $size} { z-index:$size; } }


//border-radius 
.r{border-radius:100%;};
//@each $size in 3, 5 { #{'.r' + $size} { border-radius:$size + px; } }


//border 
//@each $key, $value in 
//(1, solid 1px #c3c3c5),
//(2, solid 1px #7e6c72),
//(3, solid 1px #ededed) 
//{ @include side-focus('.b' + $key, border, $value); }


//border-width 
//@each $size in 1, 2
//{ @include side-focus('.bw1', border, $size, '-width'); }

.b-h:hover{border-color:transparent;}
.b:not(:hover){border-color:transparent;}
.no-b{border-color:transparent;}


.repeat{background-repeat:repeat;}


//line-height 
.lh{line-height: 1;}
@each $size in 18, 20{ #{'.lhx' + $size} { &, &>*{ line-height: 0.1 * $size; } } }

.mix-hide{
    @extend %hide;
}
.mix-show, .mix-hide.mix-show{
    @extend %show;
}



//position
.relative{position: relative;}
.absolute{position: absolute;}
.static{position: static;}

.st{ position: absolute; top: 0px; left: 0px; right: 0px;}
.sb{ position: absolute; bottom: 0px; left: 0px; right: 0px;}
.sl{ position: absolute; top: 0px; left: 0px; bottom: 0px;}
.sr{ position: absolute; top: 0px; right: 0px; bottom: 0px;}

.slt{ position: absolute; top: 0px; left: 0px;}
.slb{ position: absolute; bottom: 0px; left: 0px;}
.srt{ position: absolute; top: 0px; right: 0px;}
.srb{ position: absolute; bottom: 0px;; right: 0px;}

.fixed{position:fixed;}



// to side translate
.middle-t{ @include trans(0%,0%);};
.st-t{ @include trans(0%,-100%);}
.sb-t{ @include trans(0%,100%);}
.sl-t{ @include trans(-100%,0%);}
.sr-t{ @include trans(100%,0%);}

@each $indent in 5, 10 {
    .st#{$indent}x-t{ @include trans(0%, -$indent + px);}
    .sb#{$indent}x-t{ @include trans(0%, $indent + px);}
    .sl#{$indent}x-t{ @include trans(-$indent + px, 0%);}
    .sr#{$indent}x-t{ @include trans($indent + px, 0%);}
    .inner-move#{$indent}:hover{
        .stx{ @extend .st#{$indent}x-t; }
        .sbx{ @extend .sb#{$indent}x-t; }
        .slx{ @extend .sl#{$indent}x-t; }
        .srx{ @extend .sr#{$indent}x-t; }
    }
}
@each $percent in 50 {
    .st#{$percent}-t{ @include trans(0%, -$percent + %);}
    .sl#{$percent}-t{ @include trans(-$percent + %, 0%);}
}


html{ 
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    min-height:100%; 
}

body{
    @extend .break;
    margin: 0;
    font-family:"Roboto", sans-serif;
    line-height: 1.42857143;
    background-repeat: repeat;
    background-color: #eff0ea;
    overflow-x: hidden;
    overflow-y: scroll;
	min-height: 100%;
    font-size: 14px;
	font-weight: normal;
    color: #222222; 
	text-align: left;
	position: relative;
	&>.inner{
	    position: relative;
		overflow: hidden;
        min-height: 800px;
        padding: 0px 0px 1000px;
	}
	&>.overlay{
	    @extend .no-event;
	    z-index: -1;
	}
}

main{min-height: 200px;}
footer{
    position: absolute;
    bottom: 0px;
    left: 0px;
    right: 0px;
}

p{
    margin-top: 0px;
    margin-bottom: 5px;
}


h1, h2, h3, h4{
    font-family: inherit;
    font-weight: inherit;
    font-size: inherit;
    margin: 0px;
    line-height: inherit;
    color: inherit;
}

/*
h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
    font-family: inherit;
    font-weight: inherit;
    font-size: inherit;
    margin: 0px;
    line-height: inherit;
    color: inherit;
}
*/
a{
    @extend .duration;
    @include all(){ 
        text-decoration: none;
        color: inherit; outline: none; cursor: pointer; 
    }
	.img &, &.img{ 
	    display: block;
	    &:hover{
	        @extend .o90;
	    }
    }
}
[dl-swiper]{cursor: move;}

.content{
    a:hover{ @extend .underline; }
    h1,h2,h3,h4,h5,h6,p{margin-bottom: 20px;}
    ul{
        margin-bottom: 20px;
        li{margin-bottom: 10px;}
    }
    table{
        td,th{padding-right: 20px;}
    } 
    
}

.mix-col{
    min-height: 1px;
    padding-left: 15px;
    padding-right: 15px;
}

.container{ 
    @extend .ct;
    @include padding-h(15); 
    @include clearfix();
}

@each $suffix, $media, $container, $additional in $grids {
//begin
    
    .visible#{$suffix}{ @extend %none; }
    
    $i: 12;
    @while $i > 0 {
        .col#{$suffix}-#{$i}{ @extend .mix-col; }
        $i: $i - 1;
    }
    @media #{$media} { 
        $i: 12;
        @while $i > 0 {
            .col#{$suffix}-#{$i}{
                @extend .lt#{$suffix};
                width: 100 * $i / 12  + %;
            }
            $i: $i - 1;
        }
        
        
        .clearfix#{$suffix}, .clear#{$suffix}{ @include clearfix(); }
        
        //row
        @each $size in 0, 5, 7, 10, 15, 25, 35 
        { #{'.row' + $size + $suffix} { @extend .clearfix#{$suffix}; @include row($size); } }
        
        
        @if $suffix == '' {
            .row{ @extend .row15; }
        }
        
        @if $container { .container{ width:$container; } }
        
        @if $suffix == '-xm' {
            .container{ max-width: 100%; }
        }
        
        

        .tbl#{$suffix}{ display:table; &>*{ float:none !important; display:table-cell; vertical-align:middle; } }
        .vc#{$suffix}{&, & td, &.tbl>*, &[class*='tbl-']>*{vertical-align:middle;}}
        .vt#{$suffix}{&, & td, &.tbl>*, &[class*='tbl-']>*{vertical-align:top;}}
        .vb#{$suffix}{&, & td, &.tbl>*, &[class*='tbl-']>*{vertical-align:bottom;}}
        .tl#{$suffix}{text-align:left;}
        .tc#{$suffix}{text-align:center;}
        .tr#{$suffix}{text-align:right;}
        .lt#{$suffix}{float:left;}
        .ct#{$suffix}{margin-left:auto;margin-right:auto; float:none;}
        .rt#{$suffix}{float:right;}
        
        
        .string#{$suffix}{display:inline-block;}
        .inline#{$suffix}{display:inline;}
        .overflow#{$suffix}{overflow:hidden;}
        .block#{$suffix}{display:block; &.tbl, &[class*='tbl-']{&, &>*{display:block;}}}
        .italic#{$suffix}{font-style:italic;}
        .wt9#{$suffix}{font-weight:900;}
        .wt8#{$suffix}{font-weight:800;}
        .wt7#{$suffix}{font-weight:700;}
        .wt6#{$suffix}{font-weight:600;}
        .wt5#{$suffix}{font-weight:500;}
        .wt4#{$suffix}{font-weight:400;}
        .wt3#{$suffix}{font-weight:300;}
        .wt2#{$suffix}{font-weight:200;}
        .wt1#{$suffix}{font-weight:100;}

        .uppercase#{$suffix}{text-transform:uppercase;}
        .align#{$suffix}{
            &>*{
                text-align:center; 
                &>*{margin:auto;}
                &:last-child{text-align:right ;&>*{float:right;}} 
                &:first-child{text-align:left; &>*{float:left;}}
            }
        }
        
        //font-size
        @each $size in 12, 14, 16, 18, 20, 21, 24, 30, 32, 36, 40, 48, 60, 62
        { #{'.f' + $size + $suffix} { font-size:$size + px; } }
        
        //padding
        @each $size in 0, 5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 100
        { @include side('.pd' + $size, $suffix, padding, $size + px); }
        
        //margin
        @each $size in 0, 5, 10, 15, 20, 30, 35, 40, 50, 60, 70, 80, 90
        { @include side('.mg' + $size, $suffix, margin, $size + px); }
        
        //positions by sides 
        @each $size in 1, 2 
        { @include distance('.d' + $size, $suffix, $size + px); }
        
        
        #{'.w0' +  $suffix} { width: 0px; }
        #{'.w1' +  $suffix} { width: 1px; }
        #{'.w' +  $suffix} { width: 100%; }
        #{'.min-w' + $suffix} { min-width: 100%; }
        #{'.max-w' + $suffix} { max-width: 100%; }
        #{'.max-wAuto' + $suffix},#{'.max-w-auto' + $suffix} { max-width: none; }
        //@each $size in 100 {
        //    #{'.w' + $size + $suffix} { width:$size + px; }
        //    #{'.min-w' + $size + $suffix} { min-width:$size + px; }
        //    #{'.max-w' + $size + $suffix} { max-width:$size + px; }
        //}
        
        #{'.vh' +  $suffix} { height: 100%; }
        #{'.min-vh' + $suffix} { min-height: 100%; }
        #{'.max-vh' + $suffix} { max-height: 100%; }
        
        //@each $size in 100 {
        //    #{'.h' + $size + $suffix} { height:$size + px; }
        //    #{'.min-h' + $size + $suffix} { min-height:$size + px; }
        //    #{'.max-h' + $size + $suffix} { max-height:$size + px; }
        //}
        
        @if not $additional {
            .visible#{$suffix}{display:block !important;}
            .hidden#{$suffix}{display:none !important;}
        }
    }
 
    @if $additional {
        
        @media #{$additional} {
            .visible#{$suffix}{display:block !important;}
            .hidden#{$suffix}{display:none !important;}
        }
    }
    
    @if $container {
        @if $additional {
            @media #{$additional} {
                .container#{$suffix}{
                    @include clearfix();
                    @include padding-h(15); 
                    width: $container;
                    margin: auto;
                }
            }
        } @else {
            @media #{$media} {
                .container#{$suffix}{
                    @include clearfix();
                    @include padding-h(15); 
                    width: $container;
                    margin: auto;
                }
            }
        }
        
    }
    
//end  
}

.visible-print{display:none !important;}
@media print{
    .hidden-print{
        display:none !important;
    }
    .visible-print{
        display:block !important;
    }
}

@media(min-width: 1280px)and(max-width: 1600px){
    .container{
        width: 1260px;
    }
}


.glyphicon-chevron-down,.chevron-down,
.glyphicon-chevron-up,.chevron-up{
    @extend .duration;
    display: inline-block;
    position: relative;
    &.active{
        @extend .rot180x;
    }
}
.glyphicon-chevron-left,.glyphicon-chevron-right{
    @extend .duration;
}

.mix-chevron:hover{
    .glyphicon-chevron-left{
        @extend .sl5x-t;
    }
    .glyphicon-chevron-right{
        @extend .sr5x-t;
    }    
}





input,textarea,select{
    @include all(){
        outline: none;
    }
	&[required], &[dl-required]{
		@extend .duration500;
	}
}
form{
    position: relative;
    &:hover{
        input, textarea, select{
    		&[required], &[dl-required]{
    			&.ng-invalid{border-color:#F00;}
    		}
    	}
    	oi-select{
    	    &[required], &[dl-required]{
    			&.ng-invalid{
    			    .select-search{border-color:#F00;}
    			}
    		}
    	}
    }
}

.sh1{
    @include echo( cross(box-shadow, 0px 0px 5px #B7B7B7) );
}


.mixBtn{
    @extend .duration;
    @extend .no-select;
    position: relative;
    display: block;
    text-align: center;
    cursor: pointer;
    &[disabled]{
		@extend .o70;
		cursor: not-allowed;
	}
    &:not(button){
        @extend %tbl;
        &>*{
            position:relative;
            top: 0px;
        }
    }
    i{
        @extend .duration;
    }
    &:hover{
        i.icon2{ @extend .sr10x-t; }
        i.fa-long-arrow-right{
            
        }
        i.glyphicon-chevron-down{

        }
    }
}
